---
import Icon from "#app/components/icon/icon.astro";

import { navigationBarI18nDictionary } from "#app/i18n/navigationBar/dictionary.ts";
import { createBoundTranslate } from "#app/i18n/translate.ts";
import type { TLocale } from "#app/i18n/types.ts";

import { content } from "#app/i18n/navigationBar/content.ts";

let locale = (Astro.currentLocale ?? "en") as TLocale;

let t = createBoundTranslate(locale, navigationBarI18nDictionary);
---

<nav class="nav">
	{
		content.links.map((link) => {
			return (
				<a
					class:list={[
						"navLink",
						{
							active: link.isActive,
							disabled: link.isDisabled,
						},
					]}
					href={link.url}
				>
					{link.type === "icon" && (
						<Icon name={link.icon} width="20px" height="20px" />
					)}

					{link.type === "text" && (
						<span
							class="navItemLabel"
							data-disabled-label={link.isDisabled ? t("Soon") : undefined}
						>
							{t(link.label)}
						</span>
					)}
				</a>
			);
		})
	}
</nav>

<style>
	.nav {
		--spacing-m: 0.375rem;
		--spacing-l: 1rem;
		--spacing-xl: 1.375rem;

		--fs-xs: 0.5rem;
		--fs-m: 0.75rem;

		--c-white_7-5: oklch(from var(--white) l c h / 7.5%);
		--c-white_5: oklch(from var(--white) l c h / 5%);
		--c-white_2-5: oklch(from var(--white) l c h / 2.5%);

		--fc-100_50: oklch(from var(--fc-100) l c h / 50%);
		--fc-100_25: oklch(from var(--fc-100) l c h / 25%);

		--c-border: var(--c-white_5);
		--c-background: var(--c-white_2-5);

		--br-inner: 0.5rem;
		--br-outer: calc(var(--br-inner) + var(--spacing-m));

		--border-100: 1px solid var(--c-border);

		--transition-100: 0.15s ease-in-out;

		display: flex;

		gap: var(--spacing-m);
		padding: var(--spacing-m);

		font-family: var(--ff-monospace);
		font-size: var(--fs-m);

		border-radius: var(--br-outer);
		border-top-left-radius: 0;
		border-top-right-radius: 0;

		border: var(--border-100);
		border-top: none;

		background-color: var(--c-background);

		backdrop-filter: blur(100px);
	}

	.navLink {
		display: flex;
		align-items: center;
		justify-content: center;

		position: relative;

		padding: var(--spacing-m) var(--spacing-xl);

		border-radius: var(--br-inner);

		text-decoration: none;
		color: inherit;
		cursor: default;

		&:hover {
			&:not(.active)::after {
				opacity: 1;

				transform: scale(1);
			}
		}

		&::after {
			position: absolute;

			inset: 0;

			content: "";

			opacity: 0;

			background-color: var(--c-white_7-5);

			border-radius: var(--br-inner);

			transition:
				transform var(--transition-100),
				opacity var(--transition-100);

			transform: scale(0.875);
		}

		@media (max-width: 48rem) {
			& {
				padding-inline: var(--spacing-l);
			}
		}

		&.active {
			background-color: var(--c-white_7-5);
		}

		&.disabled {
			pointer-events: none;

			color: var(--fc-100_50);
		}
	}

	.navItemLabel {
		position: relative;

		&::before {
			position: absolute;

			top: -0.5rem;
			right: -0.5rem;

			content: attr(data-disabled-label);

			font-size: var(--fs-xs);

			color: var(--fc-100_25);
		}
	}
</style>
