---
import Divider from "#app/components/divider.astro";
import Photo from "#app/components/heroPhoto.astro";
import Link from "#app/components/link.astro";
import SocialLink from "#app/components/socialLink.astro";

import Arm from "#app/assets/arm.svg";
import Connio from "#app/assets/connio.svg";
import EFResearch from "#app/assets/ef-research.svg";
import FundraiseUp from "#app/assets/fundraise-up.svg";
import PostcardAndTag from "#app/assets/postcard-and-tag.svg";

type Props = {
	name: string;
	role: string;
	description: string;
	email: {
		to: string;
		label: string;
	};
	cv: {
		link: string;
		label: string;
	};
	socialLinks: {
		linkedin: {
			link: string;
			label: string;
		};
		github: {
			link: string;
			label: string;
		};
	};
};

let { name, role, description, email, cv, socialLinks } = Astro.props;
---

<header class="header">
	<nav id="nav" class="nav">
		<Link class="navItem" to="/cv">
			<span class="navItemLabel">CV</span>
		</Link>
	</nav>
</header>

<main class="main">
	<div class="profile">
		<Photo />

		<div class="about">
			<h1 class="name">{name}</h1>

			<span class="role">{role}</span>
		</div>

		<div class="description" set:html={description} />

		<div class="jobPlaces">
			<!-- WIP -->
			<div
				id="fruTrigger"
				tabindex="0"
				role="button"
				class="jobPlace"
				style={{
					"grid-column": "1/4",
					"grid-row": "1/2",
				}}
			>
				<div class="jobPlaceDescription">
					Fundraise Up
					<span class="jobYears">2021—2024</span>
				</div>

				<FundraiseUp class="jobPlaceLogo" width="24px" height="24px" />
			</div>

			<div
				class="jobPlace"
				style={{
					"grid-column": "4/7",
					"grid-row": "1/2",
				}}
			>
				<div class="jobPlaceDescription">
					Connio
					<span class="jobYears">2018—2021</span>
				</div>

				<Connio class="jobPlaceLogo" width="24px" height="24px" />
			</div>

			<div
				class="jobPlace"
				style={{
					"grid-column": "1/3",
					"grid-row": "2/3",
				}}
			>
				<div class="jobPlaceDescription">
					Arm
					<span class="jobYears">2017—2018</span>
				</div>

				<Arm class="jobPlaceLogo" width="24px" height="24px" />
			</div>

			<div
				class="jobPlace"
				style={{
					"grid-column": "3/5",
					"grid-row": "2/3",
				}}
			>
				<div class="jobPlaceDescription">
					E&F Research
					<span class="jobYears">2016—2017</span>
				</div>

				<EFResearch class="jobPlaceLogo" width="24px" height="24px" />
			</div>

			<div
				class="jobPlace"
				style={{
					"grid-column": "5/7",
					"grid-row": "2/3",
				}}
			>
				<div class="jobPlaceDescription">
					Postcard&Tag
					<span class="jobYears">2015—2016</span>
				</div>

				<PostcardAndTag class="jobPlaceLogo" width="24px" height="24px" />
			</div>
		</div>
	</div>

	<dialog id="fru" class="dialog">
		<div
			style={{
				display: "flex",
				justifyContent: "space-between",
				alignItems: "center",
			}}
		>
			<h3>Fundraise Up</h3>
			<button id="closeDialog" type="button">×</button>
		</div>
		<pre>Fullstack Developer</pre>
		<pre>2021-2024</pre>
	</dialog>
</main>

<footer class="footer">
	<Divider />

	<div class="footerContent">
		<div class="socialLinks">
			<SocialLink
				name="linkedIn"
				url={socialLinks.linkedin.link}
				label={socialLinks.linkedin.label}
			/>

			<SocialLink
				name="github"
				url={socialLinks.github.link}
				label={socialLinks.github.label}
			/>

			<Link to={cv.link} target="_blank" download>
				{cv.label}
			</Link>
		</div>

		<Link to=`mailto:${email.to}`>{email.label}</Link>
	</div>
</footer>

<script>
	let trigger = document.getElementById("fruTrigger");

	trigger?.addEventListener("click", () => {
		let dialog = document.getElementById("fru") as HTMLDialogElement | null;
		let close = document.getElementById(
			"closeDialog",
		) as HTMLButtonElement | null;

		close?.addEventListener("click", () => {
			dialog?.close();
		});

		requestAnimationFrame(() => {
			dialog?.showModal();
		});
	});
</script>

<style>
	.dialog {
		width: clamp(400px, 62.5%, 1024px);

		border: none;
		border-radius: 16px;

		color: var(--fc-100);

		background-color: rgba(0, 0, 0, 0);
		backdrop-filter: blur(0);
		opacity: 0;
		filter: blur(16px);
		transform: translateY(50px);

		transition:
			opacity 0.15s ease-in-out,
			background-color 0.15s ease-in-out,
			backdrop-filter 0.15s ease-in-out,
			transform 0.15s ease-in-out,
			filter 0.15s ease-in-out,
			overlay 0.15s ease-out allow-discrete,
			display 0.15s ease-out allow-discrete;
		transition-delay: 0.075s;

		&:open {
			opacity: 1;
			filter: blur(0);
			transform: translateY(0);
			background-color: rgba(0, 0, 0, 0.375);
			backdrop-filter: blur(8px);
		}

		&:focus {
			outline: none;
		}

		&::backdrop {
			background-color: rgba(0, 0, 0, 0);
			backdrop-filter: blur(0px);
			transition:
				display 0.15s ease-out allow-discrete,
				overlay 0.15s ease-out allow-discrete,
				background-color 0.15s ease-in-out,
				backdrop-filter 0.15s ease-in-out;
		}

		&:open::backdrop {
			background-color: rgba(0, 0, 0, 0.375);
			backdrop-filter: blur(8px);
		}
	}
	@starting-style {
		.dialog:open {
			filter: blur(16px);
			opacity: 0;
			transform: translateY(50px);
			background-color: rgba(0, 0, 0, 0);
			backdrop-filter: blur(0);
		}
	}

	@starting-style {
		.dialog:open::backdrop {
			background-color: rgb(0 0 0 / 0%);
			backdrop-filter: blur(0px);
		}
	}

	.header {
		display: flex;
		justify-content: flex-end;
	}

	.navItemLabel {
		display: inline-flex;

		transition: transform 0.15s ease-in-out;
	}

	.nav > .link {
		position: relative;

		padding: 0.75rem 2rem;

		transition:
			background-color 0.15s ease,
			color 0.15s ease;

		border: 1px solid rgba(255, 255, 255, 0.125);
		border-radius: 0.875rem;

		font-family: var(--ff-monospace);
		font-size: 1rem;

		cursor: default;

		&:hover {
			color: inherit;
			background-color: rgba(255, 255, 255, 0.125);

			&:after {
				opacity: 1;

				transform: translateX(5px);
			}

			& > .navItemLabel {
				transform: translateX(-5px);
			}
		}

		&:before {
			display: none;
		}

		&:after {
			position: absolute;
			right: 25px;
			top: 25%;

			content: "→";

			opacity: 0;

			transition:
				transform 0.15s ease-in-out,
				opacity 0.15s ease-in-out;
		}
	}

	.main {
		display: flex;
		justify-content: center;
		align-items: center;

		margin: auto 0;

		font-family: var(--ff-monospace);
		font-size: 1rem;
		line-height: 1.4;

		color: var(--fc-200);
	}

	.profile {
		display: grid;
		grid-template-columns: 1fr auto;
		grid-gap: 2rem;

		@media (max-width: 48rem) {
			display: flex;
			flex-direction: column;
		}
	}

	.about {
		display: flex;
		flex-direction: column;
		justify-content: flex-end;

		@media (max-width: 48rem) {
			margin-top: 1rem;
		}
	}

	.name {
		margin: 0;

		font-family: var(--ff-transitional);
		font-size: clamp(1rem, 7vw, 7rem);
		font-weight: 900;

		letter-spacing: -2.75px;
		line-height: 1;
		white-space: nowrap;

		color: var(--fc-100);

		@media (max-width: 48rem) {
			letter-spacing: -0.75px;
		}
	}

	.role {
		margin-top: 0.25rem;

		font-size: clamp(1rem, 2vw, 1.5rem);
		letter-spacing: -0.5px;
	}

	.description {
		max-width: 40rem;

		grid-column: 2;
		grid-row: 2;
	}

	.jobPlaces {
		display: grid;
		grid-template-columns: repeat(6, 1fr);
		grid-template-rows: repeat(2, 1fr);

		grid-column: 2;
		grid-row: 3;

		gap: 0.375rem;

		@media (max-width: 48rem) {
			display: flex;
			flex-wrap: wrap;

			gap: 0.375rem;
		}
	}

	.jobPlace {
		display: flex;
		gap: 2rem;

		padding: 0.75rem 0.625rem;

		font-size: 0.75rem;
		line-height: 1;

		color: var(--fc-100);

		background-color: rgba(255, 255, 255, calc(0.125 / 1.75));

		border: 1px solid rgba(255, 255, 255, calc(0.125 / 2));
		border-radius: 11px;

		transition: border-color 0.15s ease-in-out;

		@media (max-width: 48rem) {
			min-height: auto;
		}

		&:hover {
			border: 1px solid rgba(255, 255, 255, 0.125);
		}
	}

	.jobPlaceDescription {
		display: flex;
		flex-direction: column;
		flex-grow: 1;
	}

	.jobYears {
		margin-top: 0.25rem;

		font-size: 0.625rem;

		opacity: 0.625;
	}

	.jobPlaceLogo {
		flex-grow: 0;
	}

	.footer {
		margin-top: 4rem;
	}

	.footerContent {
		display: flex;
		flex-wrap: wrap;
		justify-content: space-between;
		align-items: flex-end;

		margin: 0.75rem 0.5rem 0.5rem 0.5rem;
		gap: 1rem;

		font-family: var(--ff-monospace);
		font-size: 1rem;
		letter-spacing: -0.5px;

		color: var(--fc-200);
	}

	.socialLinks {
		display: grid;
		grid-template-columns: 1.5rem 1.5rem auto;
		grid-gap: 1rem;
	}
</style>
